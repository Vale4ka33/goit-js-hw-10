{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["console.log('Timer');\n\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\nconst timer = document.querySelector('.timer');\nconst value = timer.querySelectorAll('.value');\n\n\nlet userSelectedDate;\nlet timerInterval;\n\n\nflatpickr(\"#datetime-picker\", {\n        enableTime: true,\n        time_24hr: true,\n        defaultDate: new Date(),\n        minuteIncrement: 1,\n        // dateFormat: \"Y-m-d\",\n        // timeFormat: \"H:i\",\n        onClose(selectedDates) {\n            const selectedDate = selectedDates[0];\n            const currentDate = new Date();\n\n            if (selectedDate > currentDate) {\n                userSelectedDate = selectedDate;\n                startBtn.disabled = false;\n            } else {\n                userSelectedDate = null;\n                startBtn.disabled = true;\n                window.alert(\"Please choose a date in the future\");\n            }\n        }\n});\n    \nstartBtn.addEventListener('click', () => {\n    if (userSelectedDate) {\n        startBtn.disabled = true;\n        input.disabled = true;\n        timerInterval = setInterval(updateTimer, 1000);\n    }\n})\n\nfunction updateTimer() {\n    const currentTime = new Date().getTime();\n    const difference = userSelectedDate - currentTime;\n    \n    if (difference <= 0) {\n        clearInterval(timerInterval);\n        if (timer) {\n            value.forEach(number => {\n                number.textContent = \"00\";\n            });\n        }\n        return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(difference);\n}\n\nfunction padZero(num) {\n    return String(num).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minuates\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\n\n\n"],"names":["startBtn","input","timer","value","userSelectedDate","timerInterval","flatpickr","selectedDates","selectedDate","updateTimer","currentTime","number"],"mappings":"wIAAA,QAAQ,IAAI,OAAO,EAOnB,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAQ,SAAS,cAAc,QAAQ,EACvCC,EAAQD,EAAM,iBAAiB,QAAQ,EAG7C,IAAIE,EACAC,EAGJC,EAAU,mBAAoB,CACtB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAGjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAGhCC,EAFgB,IAAI,MAGpBJ,EAAmBI,EACnBR,EAAS,SAAW,KAEpBI,EAAmB,KACnBJ,EAAS,SAAW,GACpB,OAAO,MAAM,oCAAoC,EAExD,CACT,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACjCI,IACAJ,EAAS,SAAW,GACpBC,EAAM,SAAW,GACjBI,EAAgB,YAAYI,EAAa,GAAI,EAErD,CAAC,EAED,SAASA,GAAc,CACnB,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAO,EAGtC,GAFmBN,EAAmBM,GAEpB,EAAG,CACjB,cAAcL,CAAa,EACvBH,GACAC,EAAM,QAAQQ,GAAU,CACpBA,EAAO,YAAc,IACrC,CAAa,EAEL,MACH,CAGL"}